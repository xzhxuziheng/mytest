{"name": "test_all_api[caseinfo37]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '成功11111111111111111111111111' in '成功'", "trace": "self = <web_testcase.api.test_all_api.TestAllApi object at 0x000001D6C6476460>\ncaseinfo = {'asserts': '成功11111111111111111111111111', 'data': {'bikeNo': 3009}, 'depends': 'n', 'execute': 'y', ...}\n\n    @pytest.mark.parametrize('caseinfo', yaml_util.read_yaml('/web_testcase/case/all_api.yaml'))\n    def test_all_api(self, caseinfo):\n        execute = str(caseinfo['execute']).upper()\n        # 用例是否执行\n        if execute == 'Y':\n            # logger.info('请求参数：%s' % caseinfo)\n            # logger.info('请求参数类型：%s' % type(caseinfo))\n            depends = str(caseinfo['depends']).upper()\n            # logger.info('是否有接口依赖：%s' % depends)\n            num = caseinfo['num']\n            name = caseinfo['name']\n            url = TestAllApi.base_url+caseinfo['url']\n            method = caseinfo['method']\n            header = TestAllApi.header\n            token = {'token': yaml_util.read_yaml('/web_testcase/case/dependCase.yaml')['token']}\n            header.update(token)\n            data = caseinfo['data']\n            asserts = caseinfo['asserts']\n            logger.info('测试接口：'+num+'%s' % name)\n            if depends == 'N':\n                res = RequestsUtil().send_request(method, url, data, headers=header)\n                yaml_util.write_yaml('/web_testcase/case/response.yaml', {num: res.json()})\n                # 断言失败结果写入日志\n                assert_in(asserts, res.json()['message'])\n>               assert asserts in res.json()['message']\nE               AssertionError: assert '成功11111111111111111111111111' in '成功'\n\nweb_testcase\\api\\test_all_api.py:42: AssertionError"}, "attachments": [{"name": "log", "source": "50ae7bdc-3fef-46d3-a169-3136ea45c182-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'num': '4-1', 'name': '获取车辆编号', 'execute': 'y', 'url': '/rent-api/bike/platform/bike/list-enable-factory-bike-no', 'method': 'get', 'data': {'bikeNo': 3009}, 'asserts': '成功11111111111111111111111111', 'depends': 'n'}"}], "start": 1655455225912, "stop": 1655455225979, "uuid": "428ed4f8-ca84-4a54-a2ef-9fda32ef49ec", "historyId": "4ca7b1208abf88953f0ed6bb13506c53", "testCaseId": "be7093e4a948e087cd2d9fd544981ae8", "fullName": "web_testcase.api.test_all_api.TestAllApi#test_all_api", "labels": [{"name": "parentSuite", "value": "web_testcase.api"}, {"name": "suite", "value": "test_all_api"}, {"name": "subSuite", "value": "TestAllApi"}, {"name": "host", "value": "DESKTOP-GCK34GH"}, {"name": "thread", "value": "32672-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "web_testcase.api.test_all_api"}]}