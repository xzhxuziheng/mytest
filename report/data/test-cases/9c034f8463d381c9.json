{"uid":"9c034f8463d381c9","name":"test_all_api[caseinfo37]","fullName":"web_testcase.api.test_all_api.TestAllApi#test_all_api","historyId":"4ca7b1208abf88953f0ed6bb13506c53","time":{"start":1655455225912,"stop":1655455225979,"duration":67},"status":"failed","statusMessage":"AssertionError: assert '成功11111111111111111111111111' in '成功'","statusTrace":"self = <web_testcase.api.test_all_api.TestAllApi object at 0x000001D6C6476460>\ncaseinfo = {'asserts': '成功11111111111111111111111111', 'data': {'bikeNo': 3009}, 'depends': 'n', 'execute': 'y', ...}\n\n    @pytest.mark.parametrize('caseinfo', yaml_util.read_yaml('/web_testcase/case/all_api.yaml'))\n    def test_all_api(self, caseinfo):\n        execute = str(caseinfo['execute']).upper()\n        # 用例是否执行\n        if execute == 'Y':\n            # logger.info('请求参数：%s' % caseinfo)\n            # logger.info('请求参数类型：%s' % type(caseinfo))\n            depends = str(caseinfo['depends']).upper()\n            # logger.info('是否有接口依赖：%s' % depends)\n            num = caseinfo['num']\n            name = caseinfo['name']\n            url = TestAllApi.base_url+caseinfo['url']\n            method = caseinfo['method']\n            header = TestAllApi.header\n            token = {'token': yaml_util.read_yaml('/web_testcase/case/dependCase.yaml')['token']}\n            header.update(token)\n            data = caseinfo['data']\n            asserts = caseinfo['asserts']\n            logger.info('测试接口：'+num+'%s' % name)\n            if depends == 'N':\n                res = RequestsUtil().send_request(method, url, data, headers=header)\n                yaml_util.write_yaml('/web_testcase/case/response.yaml', {num: res.json()})\n                # 断言失败结果写入日志\n                assert_in(asserts, res.json()['message'])\n>               assert asserts in res.json()['message']\nE               AssertionError: assert '成功11111111111111111111111111' in '成功'\n\nweb_testcase\\api\\test_all_api.py:42: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clean_extract","time":{"start":1655455223544,"stop":1655455223545,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"db_delete","time":{"start":1655455223545,"stop":1655455224095,"duration":550},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '成功11111111111111111111111111' in '成功'","statusTrace":"self = <web_testcase.api.test_all_api.TestAllApi object at 0x000001D6C6476460>\ncaseinfo = {'asserts': '成功11111111111111111111111111', 'data': {'bikeNo': 3009}, 'depends': 'n', 'execute': 'y', ...}\n\n    @pytest.mark.parametrize('caseinfo', yaml_util.read_yaml('/web_testcase/case/all_api.yaml'))\n    def test_all_api(self, caseinfo):\n        execute = str(caseinfo['execute']).upper()\n        # 用例是否执行\n        if execute == 'Y':\n            # logger.info('请求参数：%s' % caseinfo)\n            # logger.info('请求参数类型：%s' % type(caseinfo))\n            depends = str(caseinfo['depends']).upper()\n            # logger.info('是否有接口依赖：%s' % depends)\n            num = caseinfo['num']\n            name = caseinfo['name']\n            url = TestAllApi.base_url+caseinfo['url']\n            method = caseinfo['method']\n            header = TestAllApi.header\n            token = {'token': yaml_util.read_yaml('/web_testcase/case/dependCase.yaml')['token']}\n            header.update(token)\n            data = caseinfo['data']\n            asserts = caseinfo['asserts']\n            logger.info('测试接口：'+num+'%s' % name)\n            if depends == 'N':\n                res = RequestsUtil().send_request(method, url, data, headers=header)\n                yaml_util.write_yaml('/web_testcase/case/response.yaml', {num: res.json()})\n                # 断言失败结果写入日志\n                assert_in(asserts, res.json()['message'])\n>               assert asserts in res.json()['message']\nE               AssertionError: assert '成功11111111111111111111111111' in '成功'\n\nweb_testcase\\api\\test_all_api.py:42: AssertionError","steps":[],"attachments":[{"uid":"de53162678e9f2f3","name":"log","source":"de53162678e9f2f3.txt","type":"text/plain","size":218}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"web_testcase.api"},{"name":"suite","value":"test_all_api"},{"name":"subSuite","value":"TestAllApi"},{"name":"host","value":"DESKTOP-GCK34GH"},{"name":"thread","value":"32672-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"web_testcase.api.test_all_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'num': '4-1', 'name': '获取车辆编号', 'execute': 'y', 'url': '/rent-api/bike/platform/bike/list-enable-factory-bike-no', 'method': 'get', 'data': {'bikeNo': 3009}, 'asserts': '成功11111111111111111111111111', 'depends': 'n'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9c034f8463d381c9.json","parameterValues":["{'num': '4-1', 'name': '获取车辆编号', 'execute': 'y', 'url': '/rent-api/bike/platform/bike/list-enable-factory-bike-no', 'method': 'get', 'data': {'bikeNo': 3009}, 'asserts': '成功11111111111111111111111111', 'depends': 'n'}"]}